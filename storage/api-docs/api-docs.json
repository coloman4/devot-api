{
    "openapi": "3.0.0",
    "info": {
        "title": "Devot API",
        "version": "0.1"
    },
    "paths": {
        "/api/budget/summary": {
            "post": {
                "tags": [
                    "Budget Summary"
                ],
                "summary": "Retrieves a summary of expenses",
                "description": "Retrieves a summary of expenses based on a validated input. Returns the total amount spent and expense data.",
                "operationId": "bcbd56ddc3f4ea4b33145dbe7653e00f",
                "requestBody": {
                    "description": "The request body containing the validated input.",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/BudgetSummaryRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "properties": {
                                                "total_spent": {
                                                    "description": "The total amount spent on expenses.",
                                                    "type": "number",
                                                    "example": 1000.5
                                                },
                                                "data": {
                                                    "description": "The array of expenses.",
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/Expense"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            }
        },
        "/api/categories": {
            "get": {
                "tags": [
                    "Categories"
                ],
                "summary": "Retrieves a collection of categories for the authenticated user",
                "description": "Retrieves a collection of categories for the authenticated user.",
                "operationId": "3f5817a34833d0a1f4af4548dd3aeaba",
                "responses": {
                    "200": {
                        "description": "Successful response with a collection of categories",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CategoryResource"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized access",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "api/categories": {
            "post": {
                "tags": [
                    "Categories"
                ],
                "summary": "Create a new category",
                "description": "Create a new category with the given details.",
                "operationId": "store",
                "requestBody": {
                    "description": "Category details",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreCategoryRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "The created category",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CategoryResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error(s)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "type": "object",
                                            "example": {
                                                "name": [
                                                    "The name field is required."
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Internal server error."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/categories/{category}": {
            "get": {
                "tags": [
                    "Categories"
                ],
                "summary": "Display a category",
                "description": "Display the specified category.",
                "operationId": "e92579e78391b6199e78c2a091dbea0a",
                "parameters": [
                    {
                        "name": "category",
                        "in": "path",
                        "description": "Category ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Category details retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/CategoryResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized action"
                    },
                    "404": {
                        "description": "Category not found"
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Categories"
                ],
                "summary": "Update a category",
                "description": "Updates a category based on the ID provided in the URL.",
                "operationId": "updateCategory",
                "parameters": [
                    {
                        "name": "category",
                        "in": "path",
                        "description": "ID of category to update",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "description": "JSON payload containing category data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateCategoryRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Category updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/CategoryResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized action",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "description": "Unauthorized action",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Category not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "description": "Category not found",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Categories"
                ],
                "summary": "Delete a category",
                "description": "Delete a category by ID.",
                "operationId": "deleteCategory",
                "parameters": [
                    {
                        "name": "category",
                        "in": "path",
                        "description": "ID of the category to delete",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Category deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "properties": {
                                                "message": {
                                                    "type": "string",
                                                    "example": "Category deleted"
                                                },
                                                "item": {
                                                    "$ref": "#/components/schemas/CategoryResource"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized action"
                    },
                    "404": {
                        "description": "Category not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/expenses": {
            "get": {
                "tags": [
                    "Expenses"
                ],
                "summary": "Retrieves a collection of expenses for the authenticated user",
                "description": "Retrieves a collection of expenses for the authenticated user.",
                "operationId": "9b702aa9314d471a9de3a121e5183c88",
                "responses": {
                    "200": {
                        "description": "Successful response with a collection of expenses",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ExpenseResource"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized access",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Expenses"
                ],
                "summary": "Creates a new expense for the authenticated user",
                "description": "Creates a new expense for the authenticated user.",
                "operationId": "a764a04e6d047ab02a68f06c706e67f3",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreExpenseRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful response with the newly created expense",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ExpenseResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized access",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "402": {
                        "description": "Insufficient funds",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Insufficient funds."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation errors"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/expenses/{expense}": {
            "get": {
                "tags": [
                    "Expenses"
                ],
                "summary": "Retrieves a specific expense for the authenticated user",
                "description": "Retrieves a specific expense for the authenticated user.",
                "operationId": "4fb33b7003219889ff425d4d7e4da429",
                "parameters": [
                    {
                        "name": "expense",
                        "in": "path",
                        "description": "ID of the expense to retrieve",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": "1"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response with the expense details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ExpenseResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized access",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Expense not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Expense not found."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Expenses"
                ],
                "summary": "Updates an existing expense for the authenticated user",
                "description": "Updates an existing expense for the authenticated user.",
                "operationId": "6769ae6dcdd82c067d7d644c5f55ad61",
                "parameters": [
                    {
                        "name": "expense",
                        "in": "path",
                        "description": "ID of the expense to update",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "New expense details to update",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateExpenseRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful response with the updated expense details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ExpenseResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized access",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Expense not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Expense not found."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error(s)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "type": "object",
                                            "additionalProperties": {
                                                "type": "array",
                                                "items": {
                                                    "type": "string",
                                                    "example": "The :attribute field is required."
                                                }
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Expenses"
                ],
                "summary": "Delete expense",
                "description": "Deletes a specific expense.",
                "operationId": "cb05fc84a7b66979ff8fe43b62e784f3",
                "parameters": [
                    {
                        "name": "expense",
                        "in": "path",
                        "description": "ID of the expense to be deleted",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Expense deleted successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "properties": {
                                                "message": {
                                                    "type": "string",
                                                    "example": "Expense deleted"
                                                },
                                                "item": {
                                                    "$ref": "#/components/schemas/ExpenseResource"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized action.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Unauthorized action."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/auth/register": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Registers a new user",
                "description": "Register a new user.",
                "operationId": "47d5ee6b3638073a988b692b1a5902cf",
                "requestBody": {
                    "description": "User registration request",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RegisterRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful registration response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "message": {
                                                    "type": "string",
                                                    "example": "User Created Successfully"
                                                },
                                                "token": {
                                                    "type": "string",
                                                    "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "properties": {
                                                "name": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The name field is required."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/auth/login": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Logs in a user",
                "description": "Logs in a user.",
                "operationId": "224ca9cc21e92b4e3291419882455b09",
                "requestBody": {
                    "description": "User login request",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/LoginRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful login response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "message": {
                                                    "type": "string",
                                                    "example": "User Logged In Successfully"
                                                },
                                                "token": {
                                                    "type": "string",
                                                    "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid login credentials",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Email & Password does not match with our record."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "properties": {
                                                "email": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The email field is required."
                                                    }
                                                },
                                                "password": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The password field is required."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "Category": {
                "title": "Category",
                "description": "Category",
                "properties": {
                    "id": {
                        "title": "id",
                        "description": "Category Id",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "name": {
                        "title": "name",
                        "description": "Category name",
                        "type": "string",
                        "example": "Car expenses"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Category"
                }
            },
            "Expense": {
                "title": "Expense",
                "description": "Expense",
                "properties": {
                    "name": {
                        "title": "name",
                        "description": "Expense name",
                        "type": "string",
                        "example": "Car expenses"
                    },
                    "amount": {
                        "title": "amount",
                        "description": "Expence amount",
                        "type": "number",
                        "format": "float",
                        "example": "124.33"
                    },
                    "description": {
                        "title": "description",
                        "description": "Expense description",
                        "type": "string",
                        "example": "Car expenses for March."
                    },
                    "category": {
                        "title": "id",
                        "description": "Expense category",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Category"
                        }
                    },
                    "date": {
                        "title": "id",
                        "description": "Expense category",
                        "type": "string",
                        "example": "27.03.2023"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Expense"
                }
            },
            "BudgetSummaryRequest": {
                "title": "Login Request",
                "description": "Login Request request body data",
                "properties": {
                    "start_date": {
                        "title": "email",
                        "description": "List data that is created after this date",
                        "type": "string",
                        "default": "Start of the current month",
                        "example": "21.03.2022"
                    },
                    "end_date": {
                        "title": "end date",
                        "description": "List data that is created before this date",
                        "type": "string",
                        "default": "Today",
                        "example": "21.03.2023"
                    },
                    "categores": {
                        "title": "categories",
                        "description": "List of categories to apply",
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "example": "[1, 4, 55]"
                    }
                },
                "type": "object"
            },
            "LoginRequest": {
                "title": "Login Request",
                "description": "Login Request request body data",
                "required": [
                    "email",
                    "password"
                ],
                "properties": {
                    "email": {
                        "title": "email",
                        "description": "User email",
                        "type": "string",
                        "example": "myemail@gmail.com"
                    },
                    "password": {
                        "title": "password",
                        "description": "Password",
                        "type": "string",
                        "example": "secret"
                    }
                },
                "type": "object"
            },
            "RegisterRequest": {
                "title": "Register Request",
                "description": "Register Request request body data",
                "required": [
                    "name",
                    "email",
                    "password"
                ],
                "properties": {
                    "name": {
                        "title": "name",
                        "description": "Category name",
                        "type": "string",
                        "example": "Car expenses"
                    },
                    "email": {
                        "title": "email",
                        "description": "User email",
                        "type": "string",
                        "example": "myemail@gmail.com"
                    },
                    "password": {
                        "title": "password",
                        "description": "Password",
                        "type": "string",
                        "example": "canttouchthis123"
                    }
                },
                "type": "object"
            },
            "StoreCategoryRequest": {
                "title": "Store Expense Request",
                "description": "Store Expense request body data",
                "required": [
                    "name"
                ],
                "properties": {
                    "name": {
                        "title": "name",
                        "description": "Category name",
                        "type": "string",
                        "example": "Car expenses"
                    }
                },
                "type": "object"
            },
            "StoreExpenseRequest": {
                "title": "Store Expense Request",
                "description": "Store Expense request body data",
                "required": [
                    "name",
                    "category_id",
                    "amount"
                ],
                "properties": {
                    "name": {
                        "title": "name",
                        "description": "Category name",
                        "type": "string",
                        "example": "Car expenses"
                    },
                    "category_id": {
                        "title": "Category id",
                        "description": "Category id",
                        "type": "integer",
                        "example": "1"
                    },
                    "amount": {
                        "title": "amount",
                        "description": "Amount",
                        "type": "number",
                        "format": "float",
                        "example": "77.1"
                    },
                    "description": {
                        "title": "description",
                        "description": "Expense description",
                        "type": "string",
                        "example": "Some expense description....."
                    }
                },
                "type": "object"
            },
            "UpdateCategoryRequest": {
                "title": "Store Expense Request",
                "description": "Store Expense request body data",
                "properties": {
                    "name": {
                        "title": "name",
                        "description": "Category name",
                        "type": "string",
                        "example": "Car expenses"
                    }
                },
                "type": "object"
            },
            "UpdateExpenseRequest": {
                "title": "Store Expense Request",
                "description": "Store Expense request body data",
                "properties": {
                    "name": {
                        "title": "name",
                        "description": "Expense name",
                        "type": "string",
                        "example": "Electricity bill"
                    },
                    "category_id": {
                        "title": "Category id",
                        "description": "Category id",
                        "type": "integer",
                        "example": "1"
                    },
                    "amount": {
                        "title": "amount",
                        "description": "Amount",
                        "type": "number",
                        "format": "float",
                        "example": "77.1"
                    },
                    "description": {
                        "title": "description",
                        "description": "Expense description",
                        "type": "string",
                        "example": "Some expense description....."
                    }
                },
                "type": "object"
            },
            "CategoryResource": {
                "title": "CategoryResource",
                "description": "Category resource",
                "properties": {
                    "data": {
                        "title": "Data",
                        "description": "Data wrapper",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Category"
                        }
                    }
                },
                "type": "object",
                "xml": {
                    "name": "CategoryResource"
                }
            },
            "ExpenseResource": {
                "title": "ExpenseResource",
                "description": "Resource category",
                "properties": {
                    "data": {
                        "title": "Data",
                        "description": "Data wrapper",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Expense"
                        }
                    }
                },
                "type": "object",
                "xml": {
                    "name": "ExpenseResource"
                }
            }
        }
    }
}